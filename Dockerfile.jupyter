# Partir de la misma base que el Dockerfile principal
FROM python:3.11-slim AS builder

# Evitar mensajes de Python
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on

# Instalar Poetry
RUN pip install poetry

# Configurar Poetry para no crear un entorno virtual
RUN poetry config virtualenvs.create false

# Establecer directorio de trabajo
WORKDIR /app

# Copiar archivos de configuración de Poetry
COPY pyproject.toml poetry.lock* ./

# Instalar dependencias
RUN poetry install --no-interaction --no-ansi --no-root

# Etapa final
FROM python:3.11-slim AS final

# Evitar mensajes de Python
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Instalar herramientas útiles para desarrollo
RUN apt-get update && apt-get install -y \
    bash \
    vim \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Establecer directorio de trabajo
WORKDIR /app

# Copiar las dependencias instaladas desde la etapa de construcción
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Instalar Jupyter Lab y herramientas relacionadas
RUN pip install jupyterlab jupyter-server ipywidgets matplotlib

# Copiar código de la aplicación
COPY . .

# Configurar el entorno para Jupyter
ENV JUPYTER_ENABLE_LAB=yes
EXPOSE 8888

# El comando de inicio se define en docker-compose.yml